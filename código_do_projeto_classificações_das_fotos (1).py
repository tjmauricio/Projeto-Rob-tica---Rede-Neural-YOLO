# -*- coding: utf-8 -*-
"""Código do projeto - classificações das fotos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hGpfKhJkEtLBrs0DFJHSUkexAPYs66XV
"""

from google.colab import drive #Permitindo o acesso ao DRIVE
drive.mount('/content/gdrive')

!nvidia-smi #Verificando a GPU para o processamento da rede

#clonando o repositório Darknet e importando a biblioteca de ibteração como o sistema
import os
os.environ['PATH'] += ':/usr/local/cuda/bin'
!rm -fr darknet
!git clone https://github.com/AlexeyAB/darknet/

# Commented out IPython magic to ensure Python compatibility.
# Indo para a pasta Darknet, ativando a GPU e compilando tudo
# %cd darknet
!sed -i 's/GPU=0/GPU=1/g' Makefile
!sed -i 's/OPENCV=0/OPENCV=1/g' Makefile
!make

# Obtendo o peso do YoloV3
!wget https://pjreddie.com/media/files/yolov3.weights
!chmod a+x ./darknet

!apt install ffmpeg libopencv-dev libgtk-3-dev python-numpy python3-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libtiff5-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libv4l-dev libtbb-dev qtbase5-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip

!pwd
#Verificando o Repositório

'''
Detectando as classes na imagem, aqui acontece a mágica. Toda foto que for fazer a classficação, 
só ir na pasta 'data' do darknet e inserir a imagem desejada nesta pasta. Após isso mude o nome neste 
'link' de acordo com o nome que voce escolheu na foto, por exemplo, aqui temos 'moto.jpg', qualquer foto que 
quiser basta mudar o nome e rodar o programa
'''
!./darknet detect cfg/yolov3.cfg yolov3.weights data/preca.jpg

'''Toda foto classificada, irá aparecer no final com o seguinte nome 'predictions.jpg', agora
é só exibi-lá e fazer o donwload que a imagem já estará classificada
'''

import cv2 #importanto a biblioteca openCV
import matplotlib.pyplot as plt # importando a biblioteca de plotagem
import os.path # importando a biblioteca de interação com o sistema


file = 'predictions.jpg'
if os.path.exists(file): #verificando se existe o caminho do arquivo
  imagem = cv2.imread(file) #fazendo a leitura da foto
  show_img = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB) #Convertendo a imagem de BGR para RGB
  plt.imshow(show_img) # plotando a imagem junto com a escala